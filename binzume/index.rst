Androidのカメラで物体の奥行を取る
==================================

こんにちは，binzumeです．

今回のななかInside PRESSのテーマは「Immutable Infrastructure」らしいですね．よくわからないですがDocker便利とか便利ですよね！

という流れを無視して，Androidのカメラを使った実験的なアプリについて書こうと思います．
上手く行ったら面白いアプリとか作りたいのですが，色々試した感じではそんなに甘くはなく，あくまで「実験的」と先に断わっておきます．


はじめに
---------

最近はVR流行ってますね．

書く：周りの環境の3Dモデルを取り込む話．

Kinnectとか．

書く：Google の Project Tango [#]_ とかの話．

.. [#] ATAP Project Tango: https://www.google.com/atap/projecttango/


方針
------

専用ハードも高性能で魅力的ですが，やはり普段持ち歩いているスマートフォンでやりたいですね．

画像から物体の3D形状を推定するために，多くの場合は複数の視点から見た画像を入力として処理しますが，カメラが2つ以上必要か，もしくはカメラを移動して2回画像を取得しないといけないのがネック(？)です．

他の方法として，フォーカス機構のあるカメラならカメラを動かさなくても，フォーカスを変えながら撮った画像を使えば，奥行きの情報が得られそうなので試してみました．


スマートフォンのカメラのオートフォーカスの仕組み
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

携帯端末に搭載されている多くのカメラは電磁石でレンズを動かすことでフォーカスを合わせています．

書く：図

以前はレンズにバネがついていて，コイルに流す電流の大きさでレンズの位置を制御していましたが，最近は現在のレンズの位置を認識するセンサーが入っていたりするためレンズを移動するときだけ電流を流す場合が多いようです．

オートフォーカスは，フォーカスを移動しながら画像処理をすることによって最適な位置を出すことで実現しています．


アプリを作る
-----------------------------

適当なサイズのブロック単位で情報量のピークを出す．

画像の情報量について書く？
^^^^^^^^^^^^^^^^^^^^^^^^^^

アルゴリズムの話
^^^^^^^^^^^^^^^^^
フォーカス周りの挙動
^^^^^^^^^^^^^^^^^^^^^^
アプリを作るのに先立って，フォーカス周りをざっと調べておきます．

AndroidのカメラAPIにはマニュアルフォーカスが無いので，FOCUS_MODE_INFINITYにした状態からFOCUS_MODE_AUTOにした時にプレビュー画像を連続で処理することで無理やりどうにかします．

まず，AndroidのCamera.Parametersのリファレンスを見ると，フォーカスを制御するための定数がいくつか定義されています．

- FOCUS_MODE_AUTO  オートフォーカス
- FOCUS_MODE_CONTINUOUS_PICTURE 
- FOCUS_MODE_CONTINUOUS_VIDEO
- FOCUS_MODE_EDOF
- FOCUS_MODE_FIXED
- FOCUS_MODE_INFINITY
- FOCUS_MODE_MACRO

FOCUS_MODE_CONTINUOUS_PICTUREと FOCUS_MODE_CONTINUOUS_VIDEOは連続してフォーカスを合わせ続けるオプションなので今回は使いません．
FOCUS_MODE_EDOF もサーポートしている端末は少ないです．


まず，カメラからプレビュー画像を連続で取得する簡単なアプリを作ります．


   ここにサンプルコード


Nexus 5やGalaxy Nexusで実際に何度か試してみると，フォーカスを合わせるのにかかる時間は長くて1秒くらいかかります．
その間に10枚程度は画像を取得できました．
オートフォーカスにかかる時間は対象物との距離によって変化し，無限遠にピントがあった状態からレンズを移動しているため，近いほど時間がかかる傾向にあります．

  グラフ

このあたりは，SDKのドキュメントにも書かれていなし，端末依存だと考えられます．



結果画像
^^^^^^^^^^^^^^

画像：写真

画像：奥行き情報の図

画像：テクスチャ貼ってみたやつ


精度を上げる話
^^^^^^^^^^^^^^^
平面上での解像度の低さは，かなり粗いブロックで処理しているせいですが，画像のエッジ情報をヒントに補完すれば，かなり改善できます．

画像：結果


後は何度か施行して平均をとるなども考えられますが，手軽さにかけますし，それならもっと真っ当な方法があるでしょう．




まとめ
---------------------

前から試してみようと温めてきたネタですが，作ってみて実用的では無い感じだったので，せめて，記事としてまとめておこうと．


コードはGitHubに置きます [#]_ ．実用的ではないです．何かに役立てていただければと．

.. [#] https://github.com/binzume/

非実用的なものばかり作ってる感じもするので，また機会があれば今度こそ実用的(お金になる？)話とかも書きたいです．


