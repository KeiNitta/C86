シェルショッカー1号男はどういう構造なのか?
======================================================================

さてここから先は、シェルショッカー1号男の構造について教えてやることにしよう。

ファイル構成
----------------------------------------------------------------------

まずはシェルショッカー1号男のファイル・ディレクトリー構成だ。

プログラムはGitHub上に全て公開してある [#on_GitHub]_ ので、
直接見るのが手っ取り早いかもしれんが、ざっと説明することにする。

.. [#on_GitHub] ``https://github.com/ShellShoccar-jpn/shellshoccar1``


シェルショッカー1号男ディレクトリー構成
``````````````````````````````````````````````````````````````````````

.. code-block:: text

	CART/
	├─ CGI/                ・WebブラウザーからCGI経由で呼び出されるプログラムの置き場所
	├─ SHELL/              ・内部シェルコマンドとして呼び出されるプログラムの置き場所
	│                         - 例えば、上記CGIから呼ばれるコマンド
	│                         - 例えば、cronから定期的に呼ばれるバッチコマンド
	├─ CONFIG/             ・各種設定ファイル置き場
	│   ├─ COMMON.SHLIB     - 全体に関わる設定ファイル
	│   ├─ TRADING.SHLIB    - 各商品の現在の在庫数データ格納場所
	│   ├─ PAYPAL.SHLIB     - PayPalアカウントに関する設定ファイル
	│   ：      ：
	│   └─ ALLOWED_ORIGIN_LIST.TXT
	│                         - 別サイトへ支店を出す(=侵略する)為のドメイン登録用ファイル
	├─ DATA/               ・商品マスターデータ等の置き場
	│   ├─ STOCK/           - 各商品の現在の在庫数データ格納場所
	│   └─ ORDERID/         - 注文IDの通し番号格納場所
	├─ HTML/               ・静的HTMLファイル置き場
	│   │                    (一応用意してるが、べつにこの中に置かねばならぬ訳ではない)
	│   └─ JS/
	│        └ CLIENTBASE.JS - Ajax制御用等の独自JavaScript関数群
	├─ INPUT               ・CGIスクリプトが生成する各種データの置き場
	│   ├─ SESSION/         - HTTPセッションファイル置き場
	│   └─ ORDER/           - 注文票データファイル置き場
	│                           (PayPal/銀行振込や、注文/支払済/キャンセルで分かれてる)
	├─ TEMPLATE.HTML/      ・本システムのCGIが生成するWebページのテンプレート
	│                         - お客様注文画面や決済画面など
	├─ TEMPLATE.MAIL/      ・本システムのCGIが送信するメールのテンプレート
	│                         - 注文内容確認メールや決済案内メールなど
	├─ TOOL/               ・シェルスクリプトアプリ開発を助けるコマンド群
	│                         ("Open usp Tukubai"という名で公開されているもの)
	│                         (ただしそれのシェルスクリプトによるクローン版)
	├─ UTL/                ・その他、本システムで利用する汎用的なコマンド群
	│                         (やはり基本的にシェルスクリプトで書かれている)
	└─ LOG/                ・CGI,SHELL内スクリプト動作ログファイル置き場
	                           - YYYY/MMDD/ などで生成場所が分かれている


詳細は割愛するが、プログラム系ディレクトリーは CGI/、SHELL/、それからTOOL/とUTL/だ。
その他は、システム設定、商品情報データ、注文データ、動作ログなどの、データ系ディレクトリーである。

補足が必要なところだけ掻い摘んで説明しよう。


TOOL/とUTL/
``````````````````````````````````````````````````````````````````````

これらはUNIX系OS標準コマンドには用意されていないが、あると便利なコマンドを
独自に開発したものだ。例えばTOOL/には ``cgi-name`` という名前の
Webブラウザーから送られてくるCGI変数を取り出すコマンドがあったり、
同様に ``mojihame`` という特定のマクロ文字を、まとめて置換してくれる
コマンド(HTML生成に便利)などがある。(→7章)

このTOOL/の中のコマンド群は、 **Open usp Tukubai** (Tukubai)という名で公開されているし [#openusptukubai]_ 、
オンラインマニュアルがUECというサイトで公開されている [#uecman]_ 。
確かにこれは便利で、シェルスクリプトによる開発をするなら使わん手は無い。

しかし、残念なことに中身がPythonで書かれている [#writtenwithpython]_ 。
それでは、LL系言語を排した真のシェルスクリプト開発とは言えんではないか!!!
しかもmanの通りに動かないバグがあって、なかなか直らない。

そこで、我々は完全互換のシェルスクリプト版コマンドを用意した。
これはPythonが要らないどころか、POSIX環境で動作するし、
しかも内部ではsedやAWKなどC言語で書かれたUNIX標準コマンドを利用しているので、速い!!
**シェルスクリプトプログラミングの実力を再認識できる** だろう。

一方UTL/は、Tukubaiでは用意されていないが、「さらにこういうコマンドが欲しい」というものを
我々が独自開発したものである。ファイルロックや、CSV、XML、JSONパーサーなどだ。
特にXMLパーサー(UTL/parsrx.sh)などは力作で、ソースコードを見ればわかるが
**sedやAWKを何十個もパイプで繋ぐのみでXMLを解釈** している。
まぁ、シェルショッカー1号男は今のところ使っていないのだがな。[#parsrx_app]_

.. [#openusptukubai]    ``https://github.com/usp-engineers-community/Open-usp-Tukubai``
.. [#uecman]            ``https://uec.usp-lab.com/TUKUBAI_MAN/CGI/TUKUBAI_MAN.CGI``
.. [#writtenwithpython] 開発元が有償ライセンス版も出しており、そちらはC言語で書かれているのだが……。
.. [#parsrx_app]        応用例をQiitaで公開している。「jq、xmllintコマンドさようなら。俺はパイプが好きだから」で検索してみよ。

ところで、なんで大文字ばっかり?
``````````````````````````````````````````````````````````````````````

詳しい説明は割愛するが、これはTukubaiの公開元が推奨する作法だ。
本番で必要なプログラムファイルやディレクトリーについては大文字するのだという。

理由は、目立つし、削除するにもShiftキーを叩かねばならんというひと手間を要するので
多少の保険になるからということだ。確かにそうだな。


購入フローに基づく動作ブロック
----------------------------------------------------------------------

次の図は、買い物のフローに基づく「シェルショッカー1号男」のブロック図である。

.. figure:: images/abstruct_outlined.eps
   :width: 141mm

   「シェルショッカー1号男」ブロック図


前章でも言ったように、このプログラムには商品登録と商品情報ページを生成する機能が無い。
そんなものはわざわざ作ってもしょーがないからな。

作ったのは買い物カゴ機能から先である。
図の両脇に、その機能を実現するために鍵となるコマンドと、
どの章で解説しているかを併記してやったぞ。気になる章を読むがよい。

どうだ、どれも知っているコマンドばかりだろう。
こういった基本的なコマンドを活用せずに、他言語に手を染めるとは嘆かわしい。
次章以降で、エクストリーム・シェルプログラミングの世界へと洗脳してやる!
