%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (x_firefox_spdy.eps)
%%CreationDate: (2014-07-30T00:44:32+09:00)
%%BoundingBox: -0 -0 130 15
%%HiResBoundingBox: 0 0 130 15
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 130 15
userdict begin
DisplayImage
0 0
130 15
12
130 15
1
1
1
8
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE2E0FEFF
FFFFFFFFFFFFFFFFFFFFFFFEB07888F7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFF4EAF2FEFFFFFFFFFFFFFFFFFFFFFFFFCD9AF3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF61405DD
FFE200A7FFFFFFFFFFFFFFF61400000005E91D09FBFFFFFFFFFFFFFFFFFFFFFFFFB0004A
54EBFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF9D00000084FFFFFFFFFFFFFFFFFF
FFFFFF9805EAFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEB7F3FFFFFFFFD9B7C1F9FFFFFF
FFFFFFFFFFE7EDFFFFE2B8C1ECFFFFFFFFFFFFB1004EFD4D39FBFFFFFFFFFFFFFFF61407
BABDB8F7D4D1FEFFFFFFFFFFFFFFFFFFFFFFFF9F06F2FFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFDA005EE2C4B5FFFFFFFFFFFFFFFFFFFFFFFFA606EBFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFE22E9FFFFFFD1068F374EFDFFFFFFFFFFFB9C007BFFFE698A7207F4
FFFFFFFFFFFD4D004E03DDFFFFFFFFFFFFFFFFF61444FFFFFFFE8174FCDA13A51684FE98
000085FCAC0000008FFEA40A004BD2FE8226C1FE6F71FDFFFFFFFFFFFFD5005EF7FFFFFF
AC37A80A03AAFFFE8900274E06EBAC05C4FFFD579DFFFFFFFFFFFFFFFFFFFE54E6BBCBFF
FFFFFFD60AFBFFFFFFFFFFD57F7D7BFFFFFFFFFC0DEAFFFFFFFFFFFFDE0A0099FFFFFFFF
FFFFFFFFFFF61407B3B1D4FE5939FBD5000082BF9E00B9BC00B1EC7705B7DF9E0089DB37
06EAEB0E078703DEFFFFFFFFFFFFFFFD4C0003A0FDFFA00007A83403DDA5007BD13706EB
DE0055FEC603E6FFFFFFFFFFFFFFFFFFFE5900690AC8FFFFFA16A6FFFFFFFFFFFFFFFF99
7BFFFFEFA86155FCFFFFFFFFFFFFF211007EFFFFF61100000005EAF614003D2F9DFE5A39
FCD500A8FFFE5A007183007AFFA506EFFE5906EFFFA600C3FFC10000AFFFFE4F00000000
C3FFFE9E00004DFB9F05E2FFA100C24F06EAFFA606EBFE4D05E6416BFFFFFFFFFFFFFFFF
FFFFFE4F99FF9ABCFFFD1C84FFFFD5A5ABA6F7FFFF987BFFFFEFA27207E4FFFFFFFFFFFE
5A050E00C9FFFFE6E5E5E5E5FDF61443FDFFFFFE5A39FCD500C8FFFE590098B2B7D4FF9F
06EBFE5906F0FFA600BFFFCC0000A8FFFFEBE5E5E5E5F7FFFFFFF23905EA9F06F3FFA600
BE5906EFFF9906EBFFB7002E03DDFFFFFFFFFFFFFFFFFFFFFE53EAFF93BCFE5A8CFFFFFF
CC979E99F3FFFF997BFFFFFFFFFF7096FFFFFFFFFFB000DCD2002AF8FFFFFFFFFFFFFFF6
1439FBFFFFFE5A39FCD500C3FFFF98008BE8DDD2FF9F06EBFF90009DE95603DDEF0E7137
03DDFFFFFFFFFFFFFFE3ABE4E03906EBA0009EE44803E28B008AB20006EBFFF614005DFE
FFFFFFFFFFFFFFFFFFFFFE53E9FF93BCD109F6F8F7FFFFFFFFFFFFFFFF976BFFFFF0FFFE
41B5FFFFFFFFE70A9BFFFF81009BFFFFFFFFFFFFFFF61444FCFFFFFE5A43FCD500C4FFFF
FE8E0000008DFFA006EBFFFD81000005C1FE6539FBD10043FBFFFFFFFFFFFFD500000003
B2FFA0003C0000B0FFF23900077006EBFFFF8B00D7FFFFFFFFFFFFFFFFFFFFFFFE53E9FF
93BDD500000039FBFFFFFFFFFFDA00000007EA4F240A4CF6FFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7F2FAFFFFFFFFFFFFFFFFF7
F2FEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7EEEBFAFFFF9F06F0F4F7FFFFFFFFEFFDFF
FFFFFFFA1A55FDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFCEAEAFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFF9805EAFFFFFFFFFFFFFFFFFFFFFFFF8A00CDFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF8F2FEFF
FFFFFFFFFFFFFFFFFFFFFFF3F2FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFF
end
%%PageTrailer
%%Trailer
%%EOF
